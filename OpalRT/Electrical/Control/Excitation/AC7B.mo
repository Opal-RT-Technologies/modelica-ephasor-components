within OpalRT.Electrical.Control.Excitation;
model AC7B "IEEE 421.5 2005 AC7B Excitation System"
  extends OpalRT.Electrical.PartialModel.Exciter;
  parameter Real TR = 0.04 "(sec) regulator input filter time constant";
  parameter Real KPR = 4.24 "(pu) regulator proportional gain";
  parameter Real KIR = 4.24 "(pu) regulator integral gain";
  parameter Real KDR = 0 "(pu) regulator derivative gain";
  parameter Real TDR = 0 "(sec) regulator derivative block time constant";
  parameter Real VRMAX = 5.79 "(pu) regulator output maximum limit";
  parameter Real VRMIN = -5.79 "(pu) regulator output minimum limit";
  parameter Real KPA = 65.36 "(pu) voltage regulator proportional gain";
  parameter Real KIA = 59.69 "(pu) voltage regulator integral gain";
  parameter Real VAMAX = 1 "(pu) regulator output maximum limit";
  parameter Real VAMIN = -0.95 "(pu) regulator output minimum limit";
  parameter Real KP = 4.96 "(pu)";
  parameter Real KL = 10 "(pu)";
  parameter Real KF1 = 0.212 "(pu)";
  parameter Real KF2 = 0 "(pu)";
  parameter Real KF3 = 0 "(pu)";
  parameter Real TF3 = 1 "(sec) time constant (> 0)";
  parameter Real KC = 0.18 "(pu) rectifier loading factor proportional to commutating reactance";
  parameter Real KD = 0.02 "(pu) demagnetizing factor, function of AC exciter reactances";
  parameter Real KE = 1 "(pu) exciter constant related fo self-excited field";
  parameter Real TE = 1.1 "(pu) exciter time constant";
  parameter Real VFEMAX = 6.9 "(pu) exciter field current limit (> 0)";
  parameter Real VEMIN = 0 "(pu)";
  parameter Real E1 = 6.67;
  parameter Real S_E1 = 1.951;
  parameter Real E2 = 5;
  parameter Real S_E2 = 0.156;
  OpalRT.NonElectrical.Math.Continuous.TransferFunction.Lag lag1(T = TR, y_start = ETERM_0) annotation(Placement(visible = true, transformation(origin = {-70, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add3 add31(k2 = -1) annotation(Placement(visible = true, transformation(origin = {-20, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add3 add32(k2 = +1, k3 = -1) annotation(Placement(visible = true, transformation(origin = {33, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  OpalRT.NonElectrical.Math.Continuous.TransferFunctionNonWindup.PID_NonWindupLimit pid_nonwinduplimit1(KP = KPR, KI = KIR, KD = KDR, TD = TDR, MIN = VRMIN, MAX = VRMAX, x_start = if KIR <> 0 then VR0 else 0) annotation(Placement(visible = true, transformation(origin = {69, 86}, extent = {{-15, -15}, {15, 15}}, rotation = 0)));
  Modelica.Blocks.Math.Add add1(k2 = -1) annotation(Placement(visible = true, transformation(origin = {130, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Gain gain1(k = KP) annotation(Placement(visible = true, transformation(origin = {70, 120}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Nonlinear.VariableLimiter variablelimiter1 annotation(Placement(visible = true, transformation(origin = {270, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant const(k = Modelica.Constants.inf) annotation(Placement(visible = true, transformation(origin = {230, 120}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add add3(k2 = -1) annotation(Placement(visible = true, transformation(origin = {310, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  OpalRT.NonElectrical.Math.Continuous.TransferFunctionNonWindup.Integrator_NonWindupVariableLimit non_windup_integrator_var1(y_init = VE0, KI = 1 / TE, VU(start = VU0)) annotation(Placement(visible = true, transformation(origin = {360, 80}, extent = {{-20, -20}, {20, 20}}, rotation = 0)));
  Modelica.Blocks.Math.Product product2 annotation(Placement(visible = true, transformation(origin = {420, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  OpalRT.Electrical.Control.Excitation.Common.CurrentNormalization currentnormalization1 annotation(Placement(visible = true, transformation(origin = {400, -10}, extent = {{-10, 10}, {10, -10}}, rotation = 90)));
  OpalRT.Electrical.Control.Excitation.Common.Rectifier rectifier1 annotation(Placement(visible = true, transformation(origin = {400, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Math.Gain gain3(k = KE) annotation(Placement(visible = true, transformation(origin = {330, -20}, extent = {{10, -10}, {-10, 10}}, rotation = 360)));
  Modelica.Blocks.Math.Gain gain2(k = KC) annotation(Placement(visible = true, transformation(origin = {407, -50}, extent = {{10, -10}, {-10, 10}}, rotation = -90)));
  OpalRT.NonElectrical.Math.Nonlinear.SaturationQuadratic saturation_quadratic1(E1 = E1, E2 = E2, SE_E1 = S_E1, SE_E2 = S_E2) annotation(Placement(visible = true, transformation(origin = {330, 20}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Product product3 annotation(Placement(visible = true, transformation(origin = {280, 20}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add add4(k2 = +1) annotation(Placement(visible = true, transformation(origin = {250, -10}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Gain gain4(k = KD) annotation(Placement(visible = true, transformation(origin = {194, -48}, extent = {{10, -10}, {-10, 10}}, rotation = -90)));
  Modelica.Blocks.Math.Add add5 annotation(Placement(visible = true, transformation(origin = {200, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Math.Gain gain5(k = -KL) annotation(Placement(visible = true, transformation(origin = {220, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 360)));
  Modelica.Blocks.Sources.Constant constant1(k = VEMIN) annotation(Placement(visible = true, transformation(origin = {330, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add add2 annotation(Placement(visible = true, transformation(origin = {110, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 90)));
  Modelica.Blocks.Math.Gain gain6(k = KF2) annotation(Placement(visible = true, transformation(origin = {150, 30}, extent = {{10, -10}, {-10, 10}}, rotation = 360)));
  Modelica.Blocks.Math.Gain gain7(k = KF1) annotation(Placement(visible = true, transformation(origin = {125, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 360)));
  Modelica.Blocks.Continuous.TransferFunction transferfunction1(b = {1, 0}, a = {TF30, 1}, initType = Modelica.Blocks.Types.Init.InitialOutput, y_start = 0) annotation(Placement(visible = true, transformation(origin = {40, 20}, extent = {{12.5, -12.5}, {-12.5, 12.5}}, rotation = 0)));
  import OpalRT.Electrical.Control.Excitation.Common.rectifierFunction;
  import sat_q = OpalRT.NonElectrical.Math.Nonlinear.computeSaturationQuadratic;
  Modelica.Blocks.Math.Gain gain8(k = KF3) annotation(Placement(visible = true, transformation(origin = {80, 20}, extent = {{10, -10}, {-10, 10}}, rotation = 360)));
  Modelica.Blocks.Math.Product product1 annotation(Placement(visible = true, transformation(origin = {230, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  OpalRT.NonElectrical.Math.Continuous.TransferFunctionNonWindup.PI_NonWindupLimit pi_non_windup_limit1(KI = KIA, KP = KPA, MAX = VAMAX, MIN = VAMIN, y_start = if KIA <> 0 then VA0 else 0) annotation(Placement(visible = true, transformation(origin = {160, 80}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = 0)));
  Modelica.Blocks.Nonlinear.Limiter limiter1(uMax = VAMAX, uMin = VAMIN) annotation(Placement(visible = true, transformation(origin = {180, 80}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  OpalRT.NonElectrical.SignalRouting.Multiplexer multiplexer1(n = 2, s = if KP <> 0 then 1 else 2) annotation(Placement(visible = true, transformation(origin = {130, 120}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant constant2(k = 1) annotation(Placement(visible = true, transformation(origin = {90, 140}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant const1(k = VREF_0) annotation(Placement(transformation(extent = {{-153, 34}, {-133, 54}})));
  Modelica.Blocks.Math.Add add6 annotation(Placement(visible = true, transformation(origin = {-100, 40}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression Ecomp(y = ETERM)  annotation(Placement(visible = true, transformation(origin = {-105, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
protected
  parameter Real TF30(fixed = false, start = 1);
  parameter Real VE0(fixed = false, start = 1);
  parameter Real VFE0(fixed = false);
  parameter Real IN0(fixed = false);
  parameter Real FEX0(fixed = false);
  parameter Real VR0(fixed = false);
  parameter Real VA0(fixed = false);
  parameter Real VErr0(fixed = false);
  parameter Real ETERM_0(fixed = false);
  parameter Real VU0(fixed = false);
  parameter Real IFD0(fixed = false);
  parameter Real VREF_0(fixed = false);
initial algorithm
  IFD0 := XADIFD;
  TF30 := TF3;
  ETERM_0 := ETERM0;
initial equation
  EFD0 = VE0 * FEX0;
  FEX0 = rectifierFunction(IN0);
  IN0 = KC * IFD0 / VE0;
  VFE0 = KD * IFD0 + VE0 * (KE + sat_q(VE0, E1, E2, S_E1, S_E2));
  VA0 = if KP <> 0 then VFE0 / (KP * ETERM0) else VFE0;
  VR0 = if KIA <> 0 then KF1 * EFD0 + KF2 * VFE0 else VA0 / KPA + KF1 * EFD0 + KF2 * VFE0;
  VErr0 = if KIR == 0 and KPR <> 0 then VR0 / KPR else 0;
  VU0 = (VFEMAX - KD * IFD0) / (KE + sat_q(VE0, E1, E2, S_E1, S_E2));
  VREF_0 = VErr0 + ETERM_0;
  VUEL0 = 0;
  VOEL0 = 0;
equation
  connect(multiplexer1.y, product1.u1) annotation(Line(points = {{140, 120}, {199.899, 120}, {199.899, 85.0948}, {218, 85.0948}, {218, 86}}, color = {0, 0, 127}));
  connect(constant2.y, multiplexer1.u[2]) annotation(Line(points = {{101, 140}, {120.306, 140}, {120.306, 120.5}, {120, 120.5}}, color = {0, 0, 127}));
  connect(gain1.y, multiplexer1.u[1]) annotation(Line(points = {{81, 120}, {119.534, 120}, {119.534, 119.5}, {120, 119.5}}, color = {0, 0, 127}));
  connect(transferfunction1.y, VF) annotation(Line(points = {{26.25, 20}, {14, 20}, {14, 58}, {87, 58}, {87, 80}, {100, 80}}, color = {0, 0, 127}));
  connect(limiter1.y, product1.u2) annotation(Line(points = {{185.5, 80}, {200.847, 80}, {200.847, 73.3656}, {218, 73.3656}, {218, 74}}, color = {0, 0, 127}));
  connect(pi_non_windup_limit1.y, limiter1.u) annotation(Line(points = {{167.5, 80}, {174.334, 80}, {174.334, 80}, {174, 80}}, color = {0, 0, 127}));
  connect(add1.y, pi_non_windup_limit1.u) annotation(Line(points = {{141, 80}, {152.179, 80}, {152.179, 80}, {152.5, 80}}, color = {0, 0, 127}));
  connect(variablelimiter1.u, product1.y) annotation(Line(points = {{258, 80}, {230.495, 80}, {241, 80.7921}, {241, 80}}, color = {0, 0, 127}));
  connect(gain8.u, add5.y) annotation(Line(points = {{92, 20}, {199.208, 20}, {199.208, 21}, {200, 21}}, color = {0, 0, 127}));
  connect(gain8.y, transferfunction1.u) annotation(Line(points = {{69, 20}, {54.6535, 20}, {54.6535, 20}, {55, 20}}, color = {0, 0, 127}));
  non_windup_integrator_var1.VU = (VFEMAX - KD * XADIFD) / (KE + saturation_quadratic1.y);
  connect(transferfunction1.y, add32.u3) annotation(Line(points = {{26.25, 20}, {13.4653, 20}, {13.4653, 73.2673}, {21, 73.2673}, {21, 72}}, color = {0, 0, 127}));
  connect(gain6.y, add2.u2) annotation(Line(points = {{139, 30}, {116.14, 30}, {116.14, 38}, {116, 38}}, color = {0, 0, 127}));
  connect(gain6.u, add5.y) annotation(Line(points = {{162, 30}, {199.58, 30}, {199.58, 21}, {200, 21}}, color = {0, 0, 127}));
  connect(add1.u2, add2.y) annotation(Line(points = {{118, 74}, {110.004, 74}, {110, 51}, {110, 61}}, color = {0, 0, 127}));
  connect(constant1.y, non_windup_integrator_var1.VL) annotation(Line(points = {{341, 50}, {361.105, 50}, {361.105, 62}, {362, 62}}, color = {0, 0, 127}));
  connect(add3.u2, add5.y) annotation(Line(points = {{298, 74}, {287.421, 74}, {287.421, 35.5063}, {199.554, 35.5063}, {199.554, 21}, {200, 21}}, color = {0, 0, 127}));
  connect(gain5.y, variablelimiter1.limit2) annotation(Line(points = {{231, 50}, {238.432, 50}, {238.432, 71.6868}, {258, 71.6868}, {258, 72}}, color = {0, 0, 127}));
  connect(gain5.u, add5.y) annotation(Line(points = {{208, 50}, {199.554, 50}, {199.554, 21}, {200, 21}}, color = {0, 0, 127}));
  connect(gain4.y, add5.u1) annotation(Line(points = {{194, -37}, {194.161, -37}, {194.161, -2}, {194, -2}}, color = {0, 0, 127}));
  connect(add4.y, add5.u2) annotation(Line(points = {{239, -10}, {206.296, -10}, {206.296, -2}, {206, -2}}, color = {0, 0, 127}));
  connect(gain4.u, XADIFD) annotation(Line(points = {{194, -60}, {194, -64}, {-100, -64}}, color = {0, 0, 127}));
  connect(add4.u1, product3.y) annotation(Line(points = {{262, -4}, {267.327, -4}, {267.327, 20}, {269, 20}}, color = {0, 0, 127}));
  connect(gain3.y, add4.u2) annotation(Line(points = {{319, -20}, {263.762, -20}, {262, -16}, {262, -16}}, color = {0, 0, 127}));
  connect(currentnormalization1.VE, gain3.u) annotation(Line(points = {{393, -19.6}, {393, -22.5743}, {342, -22.5743}, {342, -20}}, color = {0, 0, 127}));
  connect(product3.u2, saturation_quadratic1.u) annotation(Line(points = {{292, 14}, {306.535, 14}, {306.535, 2.77228}, {352.871, 2.77228}, {352.871, 19.802}, {340, 19.802}, {340, 20}}, color = {0, 0, 127}));
  connect(saturation_quadratic1.y, product3.u1) annotation(Line(points = {{320, 20}, {306.931, 20}, {306.931, 26.5347}, {292, 26.5347}, {292, 26}}, color = {0, 0, 127}));
  connect(non_windup_integrator_var1.y, saturation_quadratic1.u) annotation(Line(points = {{370, 80}, {385.347, 80}, {385.347, 19.802}, {340, 19.802}, {340, 20}}, color = {0, 0, 127}));
  connect(gain2.y, currentnormalization1.IFD) annotation(Line(points = {{407, -39}, {407, -31.2871}, {406.733, -31.2871}, {406.733, -19.8}, {406.8, -19.8}}, color = {0, 0, 127}));
  connect(XADIFD, gain2.u) annotation(Line(points = {{-100, -64}, {407, -64}, {407, -62}}, color = {0, 0, 127}));
  connect(rectifier1.FEX, product2.u2) annotation(Line(points = {{404, 50}, {404, 75.2475}, {408, 75.2475}, {408, 74}}, color = {0, 0, 127}));
  connect(currentnormalization1.IN, rectifier1.IN) annotation(Line(points = {{400, 5.55112e-16}, {400, 28.9109}, {404, 28.9109}, {404, 30}}, color = {0, 0, 127}));
  connect(non_windup_integrator_var1.y, currentnormalization1.VE) annotation(Line(points = {{370, 80}, {385.743, 80}, {385.743, -22.5743}, {392.871, -22.5743}, {392.871, -19.6}, {393, -19.6}}, color = {0, 0, 127}));
  connect(product2.y, EFD) annotation(Line(points = {{431, 80}, {443, 80}, {443, -33}, {79, -33}, {79, 0}, {100, 0}}, color = {0, 0, 127}));
  connect(non_windup_integrator_var1.y, product2.u1) annotation(Line(points = {{370, 80}, {385.743, 80}, {385.743, 86.3366}, {408, 86.3366}, {408, 86}}, color = {0, 0, 127}));
  connect(add3.y, non_windup_integrator_var1.u) annotation(Line(points = {{321, 80}, {349.307, 80}, {349.307, 80}, {350, 80}}, color = {0, 0, 127}));
  connect(variablelimiter1.y, add3.u1) annotation(Line(points = {{281, 80}, {286.337, 80}, {286.337, 86.3366}, {298, 86.3366}, {298, 86}}, color = {0, 0, 127}));
  connect(variablelimiter1.limit1, const.y) annotation(Line(points = {{258, 88}, {251.089, 88}, {251.089, 119.604}, {241, 119.604}, {241, 120}}, color = {0, 0, 127}));
  connect(pid_nonwinduplimit1.u, add32.y) annotation(Line(points = {{54, 86}, {51.4535, 86}, {51.4535, 80}, {44, 80}}, color = {0, 0, 127}));
  connect(pid_nonwinduplimit1.y, add1.u1) annotation(Line(points = {{84, 86}, {99.9498, 86}, {99.9498, 85.7558}, {118, 85.7558}, {118, 86}}, color = {0, 0, 127}));
  connect(add31.y, add32.u2) annotation(Line(points = {{-9, 80}, {21, 80}}, color = {0, 0, 127}));
  connect(add32.u1, VOTHSG) annotation(Line(points = {{21, 88}, {9.89257, 88}, {9.89257, -36}, {-100, -36}}, color = {0, 0, 127}));
  connect(add31.u2, lag1.y) annotation(Line(points = {{-32, 80}, {-59.1449, 80}, {-59.1449, 80}, {-60, 80}}, color = {0, 0, 127}));
  connect(add6.y, add31.u1) annotation(Line(points={{-94.5,40},{-49.1003,40},{-49.1003,
          87.9177},{-32,87.9177},{-32,88}},                                                                                                        color = {0, 0, 127}));
  connect(dVREF, add6.u1) annotation(Line(points={{-100,58},{-113.368,58},{-113.368,
          43.1877},{-106,43.1877},{-106,43}},                                                                                                   color = {0, 0, 127}));
  connect(Ecomp.y, lag1.u) annotation(Line(points = {{-94, 80}, {-80, 80}}, color = {0, 0, 127}));
  connect(VUEL, add31.u3) annotation(Line(points = {{-100, 20}, {-44, 20}, {-44, 72}, {-32, 72}}, color = {0, 0, 127}));
  connect(EFD, gain7.u) annotation(Line(points = {{100, 0}, {113, 0}}, color = {0, 0, 127}));
  connect(gain7.y, add2.u1) annotation(Line(points = {{136, 0}, {138, 0}, {138, 25}, {104, 25}, {104, 38}}, color = {0, 0, 127}));
  gain1.u = ETERM;
  connect(const1.y, add6.u2) annotation(Line(points={{-132,44},{-120.308,44},{-120.308,
          37.018},{-106,37.018},{-106,37}},                                                                                                     color = {0, 0, 127}));
  annotation(Documentation(info = "<html>

<img src=\"modelica://OpalRT/resource/Excitation/AC7B.png\"
alt=\"AC7B.png\"><br>

</html>"), Diagram(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = false, initialScale = 0.1, grid = {1, 1}), graphics={  Text(origin = {223.823, 42.5867}, lineColor = {255, 0, 0}, extent = {{-7.8703, -11.3531}, {-23.37, -19.21}}, textString = "VFE"), Text(origin = {273.604, 28.2031}, lineColor = {255, 0, 0}, extent = {{-7.87, -11.35}, {-18.6508, -19.21}}, textString = "VX"), Text(origin = {392.936, 99.5503}, lineColor = {255, 0, 0}, extent = {{-7.87, -11.35}, {-18.65, -19.21}}, textString = "VE"), Text(origin = {211.799, 82.9277}, lineColor = {255, 0, 0}, extent = {{-12.3645, -11.35}, {-23.37, -19.21}}, textString = "VA"), Rectangle(origin = {366.24, 90.5}, lineColor = {255, 0, 0}, pattern = LinePattern.Dash,
            lineThickness =                                                                                                                                                                                                        1, extent = {{-22.38, 27.92}, {22.38, -27.92}}), Text(origin = {348.12, 134.06}, lineColor = {255, 0, 0}, extent = {{-22.97, 3.76}, {74.4551, -16.8293}}, textString = "Upper limit is defined in the code")}), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = false, initialScale = 0.1, grid = {1, 1})));
end AC7B;
