within OpalRT.Electrical.Control.Excitation;
model AC8B "IEEE 421.5 2005 AC8B Excitation System"
  extends OpalRT.Electrical.PartialModel.Exciter;
  parameter Real TR = 0.02 "regulator input filter time constant (sec)";
  parameter Real KPR = 10 "(pu) (> 0) voltage regulator proportional gain";
  parameter Real KIR = 0.01 "(pu) voltage regulator integral gain";
  parameter Real KDR = 2 "(pu) voltage regulator derivative gain";
  parameter Real TDR = 2 "voltage regulator derivative channel time constant (sec)";
  parameter Real VPIDMAX = 1 "PID maximum limit";
  parameter Real VPIDMIN = -1 "PID minimum limit";
  parameter Real KA = 10 "(pu) voltage regulator gain";
  parameter Real TA = 0.02 "(sec) regulator time constant";
  parameter Real VRMAX = 10 "(pu) Voltage regulator output maximum limit";
  parameter Real VRMIN = -10 "(pu) Voltage regulator output minimum limit";
  parameter Real KC = 0.02 "rectifier loading factor proportional to commutating reactance";
  parameter Real KD = 0.02 "demagnetizing factor, function of AC exciter reactances";
  parameter Real KE = 1 "exciter constant related fo self-excited field";
  parameter Real TE = 0.02 "exciter time constant (>0)";
  parameter Real VFEMAX = 10 "exciter field current limit (> 0)";
  parameter Real VEMIN = -10 "Minimum exciter voltage output";
  parameter Real E1 = 4 "Exciter voltages at which exciter saturation is defined";
  parameter Real SE_E1 = 0.4 "Exciter saturation function value at E1";
  parameter Real E2 = 5 "Exciter voltages at which exciter saturation is defined";
  parameter Real SE_E2 = 0.5 "Exciter saturation function value at E2";
  import sat_q = OpalRT.NonElectrical.Math.Nonlinear.computeSaturationQuadratic;
  import OpalRT.Electrical.Control.Excitation.Common.currentNormalizationFunction;
  import OpalRT.Electrical.Control.Excitation.Common.rectifierFunction;
  Modelica.Blocks.Math.Add add3(k2 = -1, k1 = +1) annotation(Placement(visible = true, transformation(origin = {-40, 0}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  Modelica.Blocks.Math.Add add2(k2 = +1, k1 = +1) annotation(Placement(visible = true, transformation(origin = {-60, -30}, extent = {{-5, -5}, {5, 5}}, rotation = 90)));
  Modelica.Blocks.Math.Gain gain2(k = KD) annotation(Placement(visible = true, transformation(origin = {-60, -60}, extent = {{-5, -5}, {5, 5}}, rotation = 90)));
  Modelica.Blocks.Math.Gain gain3(k = KC) annotation(Placement(visible = true, transformation(origin = {-30, -70}, extent = {{7.5, -7.5}, {-7.5, 7.5}}, rotation = 180)));
  OpalRT.NonElectrical.Math.Continuous.TransferFunctionNonWindup.Integrator_NonWindupVariableLimit non_windup_integrator_var1(KI = 1 / TE, y_init = VE0) annotation(Placement(visible = true, transformation(origin = {0, 0}, extent = {{-15, -15}, {15, 15}}, rotation = 0)));
  OpalRT.NonElectrical.Math.Continuous.TransferFunction.Lag lag1(T = TR, y_start = ETERM_0) annotation(Placement(visible = true, transformation(origin = {-81, 86}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  OpalRT.NonElectrical.Math.Continuous.TransferFunctionNonWindup.Lag_NonWindupLimit lag_non_windup_limit1(KI = KA, TI = TA, VRMAX = VRMAX, VRMIN = VRMIN, y_init = VR0) annotation(Placement(visible = true, transformation(origin = {-30, 30}, extent = {{10, -10}, {-10, 10}}, rotation = 0)));
  Modelica.Blocks.Math.Add3 add32(k2 = +1, k3 = +1) annotation(Placement(visible = true, transformation(origin = {-78, -7}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  Modelica.Blocks.Math.Add3 add31(k3 = +1, k1 = -1) annotation(Placement(visible = true, transformation(origin = {-60, 60}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  Modelica.Blocks.Math.Product product1 annotation(Placement(visible = true, transformation(origin = {70, 0}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  OpalRT.Electrical.Control.Excitation.Common.Rectifier filter1 annotation(Placement(visible = true, transformation(origin = {60, -50}, extent = {{7.5, -7.5}, {-7.5, 7.5}}, rotation = -90)));
  OpalRT.Electrical.Control.Excitation.Common.CurrentNormalization division_modified1 annotation(Placement(visible = true, transformation(origin = {40, -70}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = 0)));
  Modelica.Blocks.Math.Add add1(k2 = +1, k1 = +1) annotation(Placement(visible = true, transformation(origin = {-40, -50}, extent = {{-5, -5}, {5, 5}}, rotation = 180)));
  NonElectrical.Math.Nonlinear.SaturationQuadratic saturation1(E1 = E1, E2 = E2, SE_E1 = SE_E1, SE_E2 = SE_E2) annotation(Placement(visible = true, transformation(origin = {0, -40}, extent = {{5, -5}, {-5, 5}}, rotation = 0)));
  Modelica.Blocks.Math.Product product2 annotation(Placement(visible = true, transformation(origin = {-20, -40}, extent = {{5, -5}, {-5, 5}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant constant2(k = VFEMAX) annotation(Placement(visible = true, transformation(origin = {32.5, 87.5}, extent = {{7.5, -7.5}, {-7.5, 7.5}}, rotation = 0)));
  Modelica.Blocks.Math.Gain gain1(k = KE) annotation(Placement(visible = true, transformation(origin = {2.5, -57.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = 180)));
  Modelica.Blocks.Sources.Constant constant1(k = VEMIN) annotation(Placement(visible = true, transformation(origin = {-22.5, -17.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = 0)));
  Modelica.Blocks.Math.Add add4(k2 = +1, k1 = +1) annotation(Placement(visible = true, transformation(origin = {50, 40}, extent = {{-5, -5}, {5, 5}}, rotation = 180)));
  Modelica.Blocks.Sources.Constant const(k = KE) annotation(Placement(visible = true, transformation(origin = {82.5, 42.5}, extent = {{7.5, -7.5}, {-7.5, 7.5}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant constant3(k = VREF_0) annotation(Placement(visible = true, transformation(origin = {-129, 44}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = 0)));
  Modelica.Blocks.Math.Division division1 annotation(Placement(visible = true, transformation(origin = {20, 30}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = 360)));
  Modelica.Blocks.Math.Add add5(k2 = +1, k1 = -1) annotation(Placement(visible = true, transformation(origin = {20, 60}, extent = {{-5, -5}, {5, 5}}, rotation = 360)));
  OpalRT.NonElectrical.Math.Continuous.TransferFunctionNonWindup.PID_NonWindupLimit pid_nonwinduplimit1(KP = KPR, KI = KIR, KD = KDR, TD = TDR, MIN = VPIDMIN, MAX = VPIDMAX, x_start = if KIR <> 0 then VA0 else 0) annotation(Placement(visible = true, transformation(origin = {-30, 70}, extent = {{-15, -15}, {15, 15}}, rotation = 0)));
  Modelica.Blocks.Sources.Constant constant4(k = 0) annotation(Placement(visible = true, transformation(origin = {71.5, 80.5}, extent = {{-7.5, -7.5}, {7.5, 7.5}}, rotation = 0)));
  Modelica.Blocks.Math.Add add6 annotation(Placement(visible = true, transformation(origin = {-100, 40}, extent = {{-5, -5}, {5, 5}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression Ecomp(y = ETERM) annotation(Placement(visible = true, transformation(origin = {-107, 86}, extent = {{-9, -9}, {9, 9}}, rotation = 0)));
protected
  parameter Real VA0(fixed = false);
  parameter Real VR0(fixed = false);
  parameter Real VE0(fixed = false, start = 1);
  parameter Real SE0(fixed = false);
  parameter Real VFE0(fixed = false);
  parameter Real IN0(fixed = false);
  parameter Real FEX0(fixed = false);
  parameter Real ETERM_0(fixed = false);
  parameter Real IFD0(fixed = false);
  parameter Real VREF_0(fixed = false);
  parameter Real EFD_0(fixed = false);
initial equation
  ETERM_0 = ETERM0;
  IFD0 = XADIFD;
  EFD_0 = EFD0;
  EFD0 = VE0 * FEX0;
  FEX0 = rectifierFunction(IN0);
  IN0 = KC * IFD0 / VE0;
  SE0 = sat_q(VE0, E1, E2, SE_E1, SE_E2);
  VFE0 = IFD0 * KD + (KE + SE0) * VE0;
  VR0 = VFE0;
  VA0 = VR0 / KA;
  VREF_0 = if KIR <> 0 then ETERM_0 else ETERM_0 + VA0 / KPR;
  VUEL0 = 0;
  VOEL0 = 0;
equation
  connect(add31.y, pid_nonwinduplimit1.u) annotation(Line(points = {{-54.5, 60}, {-51.6814, 60}, {-51.6814, 70.0885}, {-45, 70.0885}, {-45, 70}}, color = {0, 0, 127}));
  connect(lag_non_windup_limit1.u, pid_nonwinduplimit1.y) annotation(Line(points = {{-19, 30}, {-9.9115, 30}, {-9.9115, 70.0885}, {-15, 70.0885}, {-15, 70}}, color = {0, 0, 127}));
  connect(add5.y, division1.u1) annotation(Line(points = {{25.5, 60}, {30.8198, 60}, {30.8198, 49.9416}, {5.84902, 49.9416}, {5.84902, 34.4192}, {11, 34.4192}, {11, 34.5}}, color = {0, 0, 127}));
  connect(gain2.y, add5.u1) annotation(Line(points = {{-60, -54.5}, {-60, -49.0417}, {-64.5641, -49.0417}, {-64.5641, 46.1172}, {-2.69955, 46.1172}, {-2.69955, 63.2144}, {14, 63.2144}, {14, 63}}, color = {0, 0, 127}));
  connect(constant2.y, add5.u2) annotation(Line(points = {{24.25, 87.5}, {3.59939, 87.5}, {3.59939, 56.9154}, {14, 56.9154}, {14, 57}}, color = {0, 0, 127}));
  connect(division1.u2, add4.y) annotation(Line(points = {{11, 25.5}, {3.14947, 25.5}, {3.14947, 44.9924}, {39.3684, 44.9924}, {39.3684, 39.3684}, {44.0926, 39.3684}, {44.0926, 40}, {44.5, 40}}, color = {0, 0, 127}));
  connect(division1.y, non_windup_integrator_var1.VU) annotation(Line(points = {{28.25, 30}, {32.1696, 30}, {32.1696, 18.8968}, {-1.7997, 18.8968}, {-1.7997, 13.5}, {-1.5, 13.5}}, color = {0, 0, 127}));
  connect(constant3.y, add6.u2) annotation(Line(points={{-120.75,44},{-114.139,44},
          {-114.139,36.7609},{-106,36.7609},{-106,37}},                                                                                                  color = {0, 0, 127}));
  connect(add4.u1, saturation1.y) annotation(Line(points = {{56, 37}, {57.6991, 37}, {57.6991, -26.9027}, {-5.30973, -26.9027}, {-5.30973, -40}, {-5, -40}}, color = {0, 0, 127}));
  connect(const.y, add4.u2) annotation(Line(points = {{74.25, 42.5}, {56.6372, 42.5}, {56.6372, 43}, {56, 43}}, color = {0, 0, 127}));
  connect(constant1.y, non_windup_integrator_var1.VL) annotation(Line(points = {{-14.25, -17.5}, {2.12389, -17.5}, {2.12389, -13.5}, {1.5, -13.5}}, color = {0, 0, 127}));
  connect(gain1.y, add1.u1) annotation(Line(points = {{-5.75, -57.5}, {-17.6991, -57.5}, {-17.6991, -52.7434}, {-34, -52.7434}, {-34, -53}}, color = {0, 0, 127}));
  connect(gain1.u, non_windup_integrator_var1.y) annotation(Line(points = {{11.5, -57.5}, {18.8968, -57.5}, {18.8968, 0}, {7.5, 0}, {7.5, 0}}, color = {0, 0, 127}));
  connect(product2.u1, non_windup_integrator_var1.y) annotation(Line(points = {{-14, -37}, {-9.07047, -37}, {-9.07047, -31.7467}, {18.6449, -31.7467}, {18.6449, -0.251958}, {7.5, -0.251958}, {7.5, 0}}, color = {0, 0, 127}));
  connect(product2.u2, saturation1.y) annotation(Line(points = {{-14, -43}, {-9.32243, -43}, {-9.32243, -40.0613}, {-5, -40.0613}, {-5, -40}}, color = {0, 0, 127}));
  connect(add1.u2, product2.y) annotation(Line(points = {{-34, -47}, {-30.2349, -47}, {-30.2349, -39.8093}, {-25.5, -39.8093}, {-25.5, -40}}, color = {0, 0, 127}));
  connect(saturation1.u, non_windup_integrator_var1.y) annotation(Line(points = {{5, -40}, {18.8968, -40}, {18.8968, -0.251958}, {7.5, -0.251958}, {7.5, 0}}, color = {0, 0, 127}));
  connect(add2.u2, add1.y) annotation(Line(points = {{-57, -36}, {-57, -40.354}, {-46.0177, -50}, {-45.5, -50}}, color = {0, 0, 127}));
  connect(division_modified1.VE, non_windup_integrator_var1.y) annotation(Line(points = {{32.8, -75.25}, {18.8968, -75.25}, {18.8968, 0}, {7.5, 0}, {7.5, 0}}, color = {0, 0, 127}));
  connect(division_modified1.IN, filter1.IN) annotation(Line(points = {{47.5, -70}, {57.1944, -70}, {57.1944, -57.5}, {57, -57.5}}, color = {0, 0, 127}));
  connect(gain3.y, division_modified1.IFD) annotation(Line(points = {{-21.75, -70}, {13.8053, -70}, {13.8053, -65.1327}, {22.6549, -65.1327}, {32.65, -65.1327}, {32.65, -64.9}}, color = {0, 0, 127}));
  connect(product1.u1, non_windup_integrator_var1.y) annotation(Line(points = {{64, 3}, {18.8968, 3}, {18.8968, 0}, {7.5, 0}, {7.5, 0}}, color = {0, 0, 127}));
  connect(filter1.FEX, product1.u2) annotation(Line(points = {{57, -42.5}, {57, -3.02349}, {64, -3.02349}, {64, -3}}, color = {0, 0, 127}));
  connect(product1.y, EFD) annotation(Line(points = {{75.5, 0}, {90.9567, 0}, {90.9567, 0}, {100, 0}}, color = {0, 0, 127}));
  connect(Ecomp.y, lag1.u) annotation(Line(points = {{-97, 86}, {-86, 86}}, color = {0, 0, 127}));
  connect(add31.u3, add32.y) annotation(Line(points = {{-66, 56}, {-71.052, 56}, {-71.052, -7}, {-72.5, -7}}, color = {0, 0, 127}));
  connect(add32.u3, VOTHSG) annotation(Line(points = {{-84, -11}, {-90.9567, -11}, {-90.9567, -36}, {-100, -36}}, color = {0, 0, 127}));
  connect(VUEL, add32.u1) annotation(Line(points = {{-100, 20}, {-92, 20}, {-92, -3}, {-84, -3}}, color = {0, 0, 127}));
  connect(VOEL, add32.u2) annotation(Line(points = {{-100, -8}, {-86.1695, -8}, {-86.1695, -7}, {-84, -7}}, color = {0, 0, 127}));
  connect(lag_non_windup_limit1.y, add3.u1) annotation(Line(points = {{-41, 30}, {-52.0354, 30}, {-52.0354, 2.47788}, {-46, 2.47788}, {-46, 3}}, color = {0, 0, 127}));
  connect(add3.y, non_windup_integrator_var1.u) annotation(Line(points = {{-34.5, 0}, {-24.7788, 0}, {-7.5, -0.353982}, {-7.5, 0}}, color = {0, 0, 127}));
  connect(XADIFD, gain3.u) annotation(Line(points = {{-100, -64}, {-100, -70}, {-39, -70}}, color = {0, 0, 127}));
  connect(add2.u1, gain2.y) annotation(Line(points = {{-63, -36}, {-63, -48.4956}, {-60.177, -48.4956}, {-60.177, -54.5}, {-60, -54.5}}, color = {0, 0, 127}));
  connect(gain2.u, XADIFD) annotation(Line(points = {{-60, -66}, {-60, -69.7345}, {-100, -69.7345}, {-100, -64}}, color = {0, 0, 127}));
  connect(add2.y, add3.u2) annotation(Line(points = {{-60, -24.5}, {-60, -2.83186}, {-46, -2.83186}, {-46, -3}}, color = {0, 0, 127}));
  connect(constant4.y, VF) annotation(Line(points = {{79.75, 80.5}, {79.375, 80.5}, {79.375, 80}, {100, 80}}, color = {0, 0, 127}));
  connect(add31.u1, lag1.y) annotation(Line(points = {{-66, 64}, {-70, 64}, {-70, 86}, {-76, 86}}, color = {0, 0, 127}));
  connect(add31.u2, add6.y) annotation(Line(points={{-66,60},{-82.5193,60},{-82.5193,
          59.8972},{-94.5,59.8972},{-94.5,40}},                                                                                                    color = {0, 0, 127}));
  connect(dVREF, add6.u1) annotation(Line(points={{-100,58},{-111.311,58},{-111.311,
          43.1877},{-106,43.1877},{-106,43}},                                                                                                   color = {0, 0, 127}));
  annotation(Documentation(info = "<html>

<img src=\"modelica://OpalRT/resource/Excitation/AC8B.png\"
alt=\"EXDC2.png\"><br>
</html>"), experiment(StartTime = 0, StopTime = 30, Tolerance = 1e-06, Interval = 0.001), Diagram(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {1, 1}), graphics={  Text(origin = {33.6665, 7.67602}, lineColor = {255, 0, 0}, extent = {{-3.57, 4.32}, {3.87, -4.45}}, textString = "VE", textstyle = {TextStyle.Bold}), Text(origin = {-9.87968, 41.4809}, lineColor = {255, 0, 0}, extent = {{-3.57, 4.32}, {5.06, -4.92}}, textString = "VA", textstyle = {TextStyle.Bold}), Text(origin = {60.1413, -77.0502}, lineColor = {255, 0, 0}, extent = {{-1.8063, 3.81608}, {3.57, -4.32}}, textString = "IN", textstyle = {TextStyle.Bold}), Text(origin = {65.7389, -30.9723}, lineColor = {255, 0, 0}, extent = {{-3.57, 4.32}, {3.57, -4.32}}, textString = "FEX", textstyle = {TextStyle.Bold}), Text(origin = {-52.62, -18.08}, lineColor = {255, 0, 0}, extent = {{-3.57, 4.32}, {3.87, -4.45}}, textString = "VFE", textstyle = {TextStyle.Bold}), Text(origin = {-44.39, 14.57}, lineColor = {255, 0, 0}, extent = {{-3.57, 4.32}, {3.87, -4.45}}, textString = "VR", textstyle = {TextStyle.Bold})}), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {1, 1}), graphics={  Text(origin = {66.6239, 81.5608}, extent = {{-30.31, 11.5}, {-8.93, -4.46}}, textString = "XADIFD", fontSize = 44)}));
end AC8B;
