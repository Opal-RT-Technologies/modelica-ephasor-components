within OpalRT.NonElectrical.SignalRouting;
block Multiplexer
  parameter Integer n = 4 "No. of Inputs";
  parameter Real s = 2 "Selected input, 0 for y=0";
  Modelica.Blocks.Interfaces.RealVectorInput u[n] annotation(Placement(visible = true, transformation(origin = {-40, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {-100, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interfaces.RealOutput y annotation(Placement(visible = true, transformation(origin = {60, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0), iconTransformation(origin = {100, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
protected
  parameter Integer si(fixed = false, start = 1);
initial equation
  si = integer(s);
equation
  y = if s <= 0 or s > n then 0 else u[si];
  annotation(Diagram(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {2, 2})), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {2, 2}), graphics={  Rectangle(origin = {-1.6129, -0.268817}, extent = {{-56.9892, 100.269}, {55.3763, -99.7312}}), Line(origin = {-79.4355, 41.9355}, points = {{-20.5645, -42.2043}, {20.5645, 42.2043}}), Line(origin = {-79.4355, 22.8495}, points = {{-20.8333, -23.1183}, {20.8333, 23.1183}, {20.8333, 23.1183}}), Line(origin = {-78.3602, -6.98925}, points = {{-19.7581, 5.10753}, {19.7581, -5.10753}}), Line(origin = {-79.4355, -23.1183}, points = {{-20.8333, 21.7742}, {20.8333, -21.7742}}), Line(origin = {-79.8387, -41.9355}, points = {{-21.2366, 40.5914}, {21.2366, -40.5914}}), Line(origin = {74.7312, 0}, points = {{20.6989, 0}, {-20.6989, 0}, {-34.9462, 0}}), Line(origin = {-39.5161, 84.1398}, points = {{-18.8172, 0}, {18.8172, 0}}), Line(origin = {-58.6022, 45.9677}, points = {{0, 0}}), Line(origin = {-40.0538, 45.9677}, points = {{-18.5484, 0}, {18.5484, 0}}), Line(origin = {-40.1075, -12.1505}, points = {{-18.5484, 0}, {18.5484, 0}}), Line(origin = {-39.7312, -44.3011}, points = {{-18.5484, 0}, {18.5484, 0}}), Line(origin = {-39.8925, -82.6344}, points = {{-18.5484, 0}, {18.5484, 0}}), Ellipse(origin = {-16.3978, 84.1398}, extent = {{-3.22581, 2.95699}, {3.22581, -2.95699}}, endAngle = 360), Ellipse(origin = {-17.3656, 46.3441}, extent = {{-3.22581, 2.95699}, {3.22581, -2.95699}}, endAngle = 360), Ellipse(origin = {-17.4194, -11.7742}, extent = {{-3.22581, 2.95699}, {3.22581, -2.95699}}, endAngle = 360), Ellipse(origin = {-17.043, -44.1935}, extent = {{-3.22581, 2.95699}, {3.22581, -2.95699}}, endAngle = 360), Ellipse(origin = {-17.2043, -82.5269}, extent = {{-3.22581, 2.95699}, {3.22581, -2.95699}}, endAngle = 360), Ellipse(origin = {35.2688, 0.0537634}, extent = {{-3.22581, 2.95699}, {3.22581, -2.95699}}, endAngle = 360), Line(origin = {24.3011, 38.2796}, points = {{-37.9032, 6.1828}, {8.87097, -34.6774}}), Ellipse(origin = {-35.8028, 25.7571},
            fillPattern =                                                                                                                                                                                                        FillPattern.Solid, extent = {{-3.23, 2.96}, {1.33935, -1.87699}}, endAngle = 360), Ellipse(origin = {-35.9641, 15.6496},
            fillPattern =                                                                                                                                                                                                        FillPattern.Solid, extent = {{-3.23, 2.96}, {1.33935, -1.87699}}, endAngle = 360), Ellipse(origin = {-35.8566, 6.88613},
            fillPattern =                                                                                                                                                                                                        FillPattern.Solid, extent = {{-3.23, 2.96}, {1.33935, -1.87699}}, endAngle = 360), Text(origin = {-31.7174, 24.3239}, extent = {{-6.99, 5.51}, {26.8825, -18.1444}}, textString = "n")}));
end Multiplexer;
